<?xml version="1.0" encoding="UTF-8"?>
<launch>


  <!-- Increase this delay if your computer is not powerful enough /> -->
  <arg name="takeoff_node_start_delay" default="10.0" />
  <arg name="robot" default="quadrotor" />
  <arg name="min_dispersion_planner" default="false" />
  <arg name="run_graph_slam" default="false" />
  <arg name="launch_unity" default="true" />
  <arg name="coverage_planner" default="false" />
  <arg name="save_range_images" default="false" />


  <arg name="onboard_sensing" default="true" />
  <arg name="odom" value="/unity_command/ground_truth/$(arg robot)/odom" />



  <group ns="$(arg robot)" if="$(arg min_dispersion_planner)">
    <node pkg="motion_primitives"
      type="planning_server.py"
      name="local_plan_server"
      output="screen">
      <rosparam file="$(find control_launch)/config/tracker_params_mp.yaml" />
      <remap from="voxel_map" to="mapper/local_voxel_map" />
    </node>
  </group>

  <include file="$(find state_machine_launch)/launch/system_mp.launch">
    <arg name="onboard_sensing" value="$(arg onboard_sensing)" />
    <arg name="lidar_frame" default="DepthCamera1" />
    <arg name="robot" value="$(arg robot)" />
    <arg name="takeoff_height" value="6" />
    <arg name="min_dispersion_planner" value="$(arg min_dispersion_planner)" />
    <arg name="lidar_cloud_topic" value="fake_lidar/cloud" />
    <arg name="calibration_file"
      value="$(find estimation_launch)/config/msckf_calib_simulation.yaml" />
  </include>

  <include file="$(find client_launch)/launch/client.launch">
    <arg name="robot" value="$(arg robot)" />
  </include>


  <group if="$(arg run_graph_slam)">
    <!-- factor graph slam -->
    <include file="$(find graphslam)/launch/run_for_unity.launch">
    </include>
    <!-- fake ground-truth sloam node -->
    <node pkg="fake_sloam" type="fake_sloam_node.py" name="fake_sloam" output="screen">
    </node>
  </group>

  <group if="$(arg coverage_planner)">
    <!-- coverage planner node -->
    <include file="$(find polygon_coverage_ros)/launch/coverage_planner.launch">
    </include>
  </group>


  <node name="robot" pkg="arl_unity_ros_air" type="rosflight_offboard.py" ns="$(arg robot)"
    output="screen" launch-prefix="bash -c 'sleep $(arg takeoff_node_start_delay); $0 $@' " />


  <node name="ground_truth_odom_throttler" type="throttle" pkg="topic_tools"
    args="messages /unity_command/ground_truth/quadrotor/odom 5 /unity_command/ground_truth/quadrotor/odom_throttled" />

</launch>